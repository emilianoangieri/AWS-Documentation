AWSTemplateFormatVersion: 2010-09-09
Parameters: #the VPC name
  VPCname:
    Type: String

Resources:
   #####################
   ##### VPC
   
  myVPC: #the VPC Creation
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/20
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Ref VPCname
        
    ##############
    #### INTERNET GATEWAY
    
  #the creation of Internet Gateway
  myIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
        Tags:
        - Key: Name
          Value: igw-test

  #Attach Internet Gateway to VPC          
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
        InternetGatewayId: !Ref myIGW
        VpcId: !Ref myVPC
        
    ##############
    ######## CREATE SUBENTS
    
  #The subnet creation
  mySubnetPublicELB1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/27
      Tags:
      - Key: Name
        Value: public-ELB-1a
  mySubnetPublicELB1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.32/27
      Tags:
      - Key: Name
        Value: public-ELB-1b
  mySubnetPublicNAT1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.64/27
      Tags:
      - Key: Name
        Value: public-NAT-1a
  mySubnetPublicNAT1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.96/27
      Tags:
      - Key: Name
        Value: public-NAT-1b
  mySubnetPrivateApplication1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/27
      Tags:
      - Key: Name
        Value: private-Application-1a
  mySubnetPrivateApplication1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.32/27
      Tags:
      - Key: Name
        Value: private-Application-1b
  mySubnetPrivateDB1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.64/27
      Tags:
      - Key: Name
        Value: private-db-1a
  mySubnetPrivateDB1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.96/27
      Tags:
      - Key: Name
        Value: private-db-1b
        
        ################
        ###### CREATE ROUTE TABLE
        
  #The Route Table creation
  myRouteTablePublic: #the public Route Table creation
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
      - Key: Name
        Value: public-rtb
  
  myRouteTablePrivate1a: #the private Route Table creation
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
      - Key: Name
        Value: private-rtb-1a

  myRouteTablePrivate1b: #the private Route Table creation
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
      - Key: Name
        Value: private-rtb-1b
        
        ############
        #### ASSOCIATE ROUTE TABLE TO Subnet
        
  #Associate Public Route table to public subnets
  mySubnetRouteTableAssociationMySubnetPublicELB1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnetPublicELB1a
      RouteTableId: !Ref myRouteTablePublic
      
  mySubnetRouteTableAssociationMySubnetPublicELB1b:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnetPublicELB1b
      RouteTableId: !Ref myRouteTablePublic

  mySubnetRouteTableAssociationMySubnetPublicNAT1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnetPublicNAT1a
      RouteTableId: !Ref myRouteTablePublic

  mySubnetRouteTableAssociationMySubnetPublicNAT1b:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnetPublicNAT1b
      RouteTableId: !Ref myRouteTablePublic
      
  #Associate Private Route table to private subnets
  mySubnetRouteTableAssociationMySubnetPrivateApplication1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnetPrivateApplication1a
      RouteTableId: !Ref myRouteTablePrivate1a

  mySubnetRouteTableAssociationMySubnetPrivateApplication1b:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnetPrivateApplication1b
      RouteTableId: !Ref myRouteTablePrivate1b

  mySubnetRouteTableAssociationMySubnetPrivateDB1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnetPrivateDB1a
      RouteTableId: !Ref myRouteTablePrivate1a
      
  mySubnetRouteTableAssociationMySubnetPrivateDB1b:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnetPrivateDB1b
      RouteTableId: !Ref myRouteTablePrivate1b
      
      ######################
      ###       NAT
      
   #Create NAT gateway
  myNAT1a:
    DependsOn: AttachIGW
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt myEIP1.AllocationId
      SubnetId: !Ref mySubnetPublicNAT1a

  myNAT1b:
    DependsOn: AttachIGW
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt myEIP2.AllocationId
      SubnetId: !Ref mySubnetPublicNAT1b

  #Create elastic IP needed by NAT      
  myEIP1:
   Type: AWS::EC2::EIP
   Properties:
     Domain: vpc

  myEIP2:
   Type: AWS::EC2::EIP
   Properties:
     Domain: vpc
     
     ########
     ### ROUTE OF ROUTE TABLE
     
  #public Internet Route
  myRoutePublic:
    Type: AWS::EC2::Route
    DependsOn: myIGW
    Properties:
      RouteTableId: !Ref myRouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myIGW
      
   #private Route via NAT
  myRoutePrivate1a:
    Type: AWS::EC2::Route
    DependsOn: myNAT1a
    Properties:
      RouteTableId: !Ref myRouteTablePrivate1a
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref myNAT1a
      
  myRoutePrivate1b:
    Type: AWS::EC2::Route
    DependsOn: myNAT1a
    Properties:
      RouteTableId: !Ref myRouteTablePrivate1b
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref myNAT1b